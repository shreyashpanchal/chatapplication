{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useState","str","setstr","msg","setMsg","useEffect","firestore","collection","orderBy","onSnapshot","query","array","forEach","doc","push","data","className","map","index","id","message","placeholder","required","type","value","onChange","e","target","onClick","db","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAWAA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAQMP,QAAf,E,OC+DeQ,MA1Ef,WACE,MAAmBC,mBAAS,IAA5B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAmBF,mBAAS,IAA5B,mBAAOG,EAAP,KAAWC,EAAX,KA0CA,OAtCAC,qBAAU,WACCd,EAASe,YACfC,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAACC,GAChE,IAAIC,EAAM,GACVD,EAAME,SAAQ,SAACC,GACbF,EAAMG,KAAKD,EAAIE,WAEjBX,EAAOO,MAEVT,EAAO,MAEP,IA4BC,sBAAKc,UAAU,OAAf,UACE,0CACA,qBAAKA,UAAU,YAAf,SAGEb,EAAIc,KAAI,SAACF,EAAKG,GACZ,MAAa,MAAVH,EAAKI,GAGJ,qBAAKH,UAAU,MAAf,SAAkCD,EAAKK,SAAbF,GAK1B,qBAAKF,UAAU,OAAf,SAAmCD,EAAKK,SAAbF,QAOnC,sBAAKF,UAAU,QAAf,UACE,uBAAOK,YAAY,gBAAgBC,UAAQ,EAACC,KAAK,OAAOC,MAAOvB,EAAKwB,SAhE5D,SAACC,GACbxB,EAAOwB,EAAEC,OAAOH,UAgEZ,cAAC,IAAD,CAAUR,UAAU,OAAOY,QAlDlB,WACb,GAAS,KAAN3B,OAIC,CAEN,IAAM4B,EAAGtC,EAASe,YAClBuB,EAAGtB,WAAW,YAAYuB,IAAI,CAC5BV,QAAQnB,EACR8B,UAAUxC,EAASe,UAAU0B,WAAWC,kBACxCd,GAAG,MAGLU,EAAGtB,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAACC,GAC/D,IAAIC,EAAM,GACVD,EAAME,SAAQ,SAACC,GACbF,EAAMG,KAAKD,EAAIE,WAEjBX,EAAOO,MAEVT,EAAO,MA6BD,yBC7DOgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1fdd6cc.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyBbOQW9PwDt60KohinH_7sgn5uxaPNjQ4o\",\r\n  authDomain: \"chatapp-17a71.firebaseapp.com\",\r\n  projectId: \"chatapp-17a71\",\r\n  storageBucket: \"chatapp-17a71.appspot.com\",\r\n  messagingSenderId: \"192896040875\",\r\n  appId: \"1:192896040875:web:2a322ab64579bd595fdcee\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n\r\nexport default firebase;","import React,{useState,useEffect} from 'react'\nimport './App.css'\nimport SendIcon from '@material-ui/icons/Send';\nimport  firebase from './firebase';\n\nfunction App() {\n  const [str,setstr]=useState(\"\");\n  const [msg,setMsg]=useState([]);\n  const handler=(e)=>{\n    setstr(e.target.value);\n  }\n  useEffect(()=>{\n    const db=firebase.firestore();\n    db.collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot((query)=>{\n      let array=[];\n      query.forEach((doc)=>{\n        array.push(doc.data());\n      })\n      setMsg(array);\n   })\n   setstr(\"\");\n }\n  ,[]);\n  const handler1=()=>{\n    if(str===\"\")\n    {\n     \n    }\n    else{\n     \n  const db=firebase.firestore();\n  db.collection(\"messages\").add({\n    message:str,\n    timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n    id:\"2\"\n  })\n\n  db.collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot((query)=>{\n     let array=[];\n     query.forEach((doc)=>{\n       array.push(doc.data());\n     })\n     setMsg(array);\n  })\n  setstr(\"\");\n}\n  }\n\n  \n  return (\n    <div className=\"main\">\n      <h1>Chat App</h1>\n      <div className=\"container\">\n      \n      {\n        msg.map((data,index)=>{\n          if(data.id===\"2\")\n          {\n            return(\n              <div className=\"msg\" key={index}>{data.message}</div>\n            )\n          }\n          else{\n            return(\n              <div className=\"msg1\" key={index}>{data.message}</div>\n            )\n          }\n         \n        })\n      }\n      </div>\n      <div className=\"input\">\n        <input placeholder=\"Enter Message\" required type=\"text\" value={str} onChange={handler}/>\n        <SendIcon className=\"send\" onClick={handler1}>Send</SendIcon>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}